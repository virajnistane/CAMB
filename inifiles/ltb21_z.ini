#Parameters for CAMB sources, e.g. for 21cm

#output_root is prefixed to output file names
output_root = ltb21_z

#Set main cosmological parameters in standard params.ini
DEFAULT(params.ini)

#Default CAMB sources parameters
DEFAULT(sources_defaults.ini)

#for 21cm C_l with sharp window use get_transfer=T, transfer_21cm_cl=T
#for broad window and other sources use get_scalar_cls=T
get_scalar_cls = T
get_vector_cls = F
get_tensor_cls = F
get_transfer   = F

# 0: linear, 1: non-linear matter power (HALOFIT), 2: non-linear CMB lensing (HALOFIT),
# 3: both non-linear matter power and CMB lensing (HALOFIT)
do_nonlinear = 0

#l_max_scalar      = 10000
#for 21cm k_eta_max_scalar need to be at least 5000; for lensing is re-set automatically
#k_eta_max_scalar  = 20000
l_max_scalar      = 13000
k_eta_max_scalar  = 50000

limber_windows  = F

#output 21cm spectra in mK (rather than dimensionless)
#also changes normalization of output transfer functions if Do21cm
use_mK = T

### 21cm ###
line_basic = T
line_distortions = T
line_extra = F
line_phot_quadrupole = F
line_phot_dipole = F
#should get 21cm polarization (but appears to be broken):
line_reionization = F

### window functions ###

#Number of z-windows to use for sources. assumed Gaussian - edit Window_f_a in modules.f90.
num_redshiftwindows = 12

#Set of indexed parameters for each window function
#Redshift of the window for C_l

redshift(1) =12
# 21cm, counts or lensing
redshift_kind(1) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(1) = 1.

redshift(2) =15
# 21cm, counts or lensing
redshift_kind(2) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(2) = 1.

redshift(3) =18
# 21cm, counts or lensing
redshift_kind(3) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(3) = 1.

redshift(4) =20
# 21cm, counts or lensing
redshift_kind(4) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(4) = 1.

redshift(5) =22
# 21cm, counts or lensing
redshift_kind(5) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(5) = 1.

redshift(6) =25
# 21cm, counts or lensing
redshift_kind(6) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(6) = 1.

redshift(7) =28
# 21cm, counts or lensing
redshift_kind(7) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(7) = 1.

redshift(8) =30
# 21cm, counts or lensing
redshift_kind(8) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(8) = 1.

redshift(9) =35
# 21cm, counts or lensing
redshift_kind(9) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(9) = 1.

redshift(10) =40
# 21cm, counts or lensing
redshift_kind(10) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(10) = 1.

redshift(11) =45
# 21cm, counts or lensing
redshift_kind(11) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(11) = 1.

redshift(12) =50
# 21cm, counts or lensing
redshift_kind(12) = 21cm
# if 21cm, width of T_b window in Mhz
redshift_sigma_Mhz(12) = 1.


#Transfer function settings, transfer_kmax=0.5 is enough for sigma_8
#transfer_k_per_logint=0 sets sensible non-even sampling;
#transfer_k_per_logint=5 samples fixed spacing in log-k
#transfer_interp_matterpower =T produces matter power in regular interpolated grid in log k;
# use transfer_interp_matterpower =F to output calculated values (e.g. for later interpolation)

#Settings for transfer functions/matter power spectrum/21cm sharp-z power spectrum
transfer_high_precision = T
transfer_kmax           = 500
transfer_k_per_logint   = 0
transfer_num_redshifts  = 1
transfer_redshift(1)    = 50

#Whether transfer functions are 21cm (monopole and velocity), or standard
Do21cm = T

#Whether to compute 21cm C_l from transfer functions for sharp redshift window
#using only monopole source and redshift distortions
transfer_21cm_cl        = T

#21cm C_l for sharp window
transfer_cl_filename(1) =

#Whether to turn off small-scale late time radiation hierarchies (save time,v. accurate)
do_late_rad_truncation   = F
